#######################################################################################################################
# Создаем функцию сортировки чисел
#######################################################################################################################

def sorting_list(numbers_list):
    if len(numbers_list) <= 1:
        return numbers_list
    component = numbers_list[0]
    left = list(filter(lambda x: x < component, numbers_list))
    center = [i for i in numbers_list if i == component]
    right = list(filter(lambda x: x > component, numbers_list))
    return sorting_list(left) + center + sorting_list(right)


#######################################################################################################################
# Создаем функцию поиска и проверки введеного числа в последовательности
#######################################################################################################################

def index_search(numbers_list, number, start, end):
    if start > end:
        return f'Введенное число отсутствует в последовательности.\nИндекс числа, которое ' \
               f'{"больше" if number < numbers_list[0] else "меньше"} введенного: ' \
               f'{0 if number < numbers_list[0] else len(numbers_list) - 1}'
    middle = (start + end) // 2
    if numbers_list[middle] == number or (numbers_list[middle] > number and numbers_list[middle - 1] < number):
        return f'Индекс числа, которое больше или равно введенному: ' \
               f'{middle}\nИндекс числа, которое меньше введенного: ' \
               f'{middle - 1 if middle != 0 else "отсутствует в последовательности"}'
    if number < numbers_list[middle]:
        return index_search(numbers_list, number, start, middle - 1)
    else:
        return index_search(numbers_list, number, middle + 1, end)


#######################################################################################################################
# Создаем циклы для ввода данных и их проверки
#######################################################################################################################
while True:
    try:
        list_of_numbers = list(map(int, input('Введите через пробел, последовательность целых чисел :\n').split()))
    except ValueError:
        print('Необходимо вводить только целые числа! Попробуйте еще раз.')
        continue
    else:
        break

while True:
    try:
        user_input_number = int(input('Введите любое число:\n'))
    except ValueError:
        print('Необходимо вводить только целые числа! Попробуйте еще раз.')
        continue
    else:
        break

#######################################################################################################################
# Создаем переменную, в которой храним отсортированный список
#######################################################################################################################
sorted_list = sorting_list(list_of_numbers)

#######################################################################################################################
# Создаем переменную, в которой храним отсортированный список
#######################################################################################################################

print(f'Последовательность чисел упорядочена по возрастанию:\n{sorted_list}')

print(index_search(sorted_list, user_input_number, 0, len(sorted_list) - 1))
